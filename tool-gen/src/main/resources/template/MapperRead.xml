<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>mapper</name>
	<filePath>ddc${module}/src/main/resources/mybatis/mappers/</filePath>
	<fileName>${name}_SqlMap.xml</fileName>
	<content><![CDATA[<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.${module}.dao.${className}DAO">
	<resultMap type="${packageName}.${module}.po.${className}PO" id="${name}Map">
		<result property="${pk.name}" column="${pk.column.columnName}" />
#foreach(${field} in ${fields})
		<result property="${field.name}" column="${field.column.columnName}" />
#end
	</resultMap>

	<sql id="${name}Columns">
		${pk.column.columnName},
#foreach(${field} in ${fields})
#if(${velocityCount} == $!{fields.size()})
		${field.column.columnName}
#else
		${field.column.columnName},
#end
#end
	</sql>

	<select id="findById" parameterType="${packageName}.${module}.po.${className}PO" resultMap="${name}Map">
		SELECT
		<include refid="${name}Columns" />
		FROM ${table.tableName}
		WHERE $!{pk.column.columnName} = #{po.${pk.name}}
	</select>

	<select id="findOfPage" resultMap="${name}Map">
		SELECT
		<include refid="${name}Columns" />
		FROM ${table.tableName}
		<where>
#foreach(${field} in ${fields})
			<if test="po.${field.name} != null">
				and ${field.column.columnName} = #{po.${field.name}}
			</if>
#end
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
#if("$!{pk}" != "")
			<otherwise>
				ORDER BY ${pk.column.columnName} desc
			</otherwise>
#end
		</choose>
		<if test="page != null">
		limit #{page.limitStart},#{page.pageSize}
		</if>
	</select>
	
	<select id="countOfPage" resultType="java.lang.Integer">
		SELECT
		count(1) cnt
		FROM ${table.tableName}
		<where>
#foreach(${field} in ${fields})
			<if test="po.${field.name} != null">
				and ${field.column.columnName} = #{po.${field.name}}
			</if>
#end
		</where>
		<choose>
			<!--<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>-->
#if("$!{pk}" != "")
			<otherwise>
				ORDER BY ${pk.column.columnName} desc
			</otherwise>
#end
		</choose>
	</select>
	
	<select id="findAll" resultMap="${name}Map">
		SELECT
		<include refid="${name}Columns" />
		FROM ${table.tableName}
		<where>
#foreach(${field} in ${fields})
			<if test="po.${field.name} != null">
				and ${field.column.columnName} = #{po.${field.name}}
			</if>
#end
		</where>
		<choose>
			<!--<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>-->
#if("$!{pk}" != "")
			<otherwise>
				ORDER BY ${pk.column.columnName} desc
			</otherwise>
#end
		</choose>
	</select>
	
<!-- insert -->

	<insert id="insert" parameterType="${packageName}.${module}.po.${className}PO">
		INSERT INTO ${table.tableName}(
#foreach(${field} in ${fields})
#if(${velocityCount} == $!{fields.size()})
		${field.column.columnName}
#else
		${field.column.columnName},
#end
#end
		) VALUES (
#foreach(${field} in ${fields})
#if(${velocityCount} == $!{fields.size()})
		#{${field.name}}
#else
		#{${field.name}},
#end
#end
		)
		<selectKey keyProperty="${pk.name}" resultType="${pk.javaType.name}">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="update">
		UPDATE ${table.tableName} 
		<trim prefix="set" suffixOverrides=",">
#foreach(${field} in ${fields})
#if(${velocityCount} == $!{fields.size()})
			<if test = "${field.name} != null">
				${field.column.columnName} = #{${field.name}}
			</if>
#else
			<if test = "${field.name} != null">
				${field.column.columnName} = #{${field.name}},
			</if>
#end
#end
		</trim>
		
		WHERE $!{pk.column.columnName} = #{${pk.name}}
	</update>

#set(${hasDeleted} = false)
#foreach(${field} in ${fields})
#if("$!{field.name}" =="isDeleted")
#set(${hasDeleted} = true)
#end
#end
#if(${hasDeleted})
	<update id="delete">
		UPDATE ${table.tableName} SET is_deleted = 1 WHERE $!{pk.column.columnName} = #{${pk.name}}
	</update>
#else
	<delete id="delete">
		delete from ${table.tableName} where $!{pk.column.columnName} = #{${pk.name}}
	</delete>
#end

	
</mapper>]]>
	</content>
</template>